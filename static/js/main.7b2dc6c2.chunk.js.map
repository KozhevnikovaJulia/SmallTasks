{"version":3,"sources":["components/Rating/Rating.module.css","components/Rating/Rating.tsx","components/Accordion/Accordion.tsx","components/OnOff/OnOff_useState.tsx","components/UncontrolledAccordion/UnControlledAccordion.tsx","components/UncontrolledRating/UnControlledRating.tsx","components/UncontrolledOnOff/UnControlledOnOff_useState.tsx","components/Input/input.stories.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Star","props","className","selected","style","EmptyStar","onClick","value","Rating","AccordionTitle","title","AccordionBody","items","map","i","index","key","onClickItem","Accordion","titleValue","collapsed","OnOff","onStyle","width","height","padding","border","display","backgroundColor","onValue","offStyle","marginLeft","indicatorStyle","borderRadius","setCollapsed","UnControlledAccordion","useState","setValue","UnControlledRating","UnControlledOnOff","on","setOn","ControlledCheckBox","type","checked","onChange","e","currentTarget","App","ratingValue","setRatingValue","accordionCollapsed","setaccordionCollapsed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b2dc6c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Star\":\"Rating_Star__1Qt41\",\"EmptyStar\":\"Rating_EmptyStar__1NcQC\"};","import React, {useState} from \"react\";\nimport {RatingValueType} from \"../UncontrolledRating/UnControlledRating\";\nimport style from \"./Rating.module.css\";\n\nexport type RatingPropsType = {\n  value: RatingValueType\n  onClick: (value:RatingValueType)=>void\n}\n\nfunction Rating (props:RatingPropsType ) {\n     return (\n      <div>\n      <Star selected={props.value >0} onClick={props.onClick} value={1}/>\n      <Star selected={props.value >1} onClick={props.onClick} value={2}/>\n      <Star selected={props.value >2} onClick={props.onClick} value={3}/>\n      <Star selected={props.value >3} onClick={props.onClick} value={4}/>\n      <Star selected={props.value >4} onClick={props.onClick} value={5}/>\n      </div>\n        );\n  }\n\n\ntype StarPropsType = {\n  selected:boolean\n    value:RatingValueType\n  onClick:(value:RatingValueType)=>void\n}\n/*function Star(props: StarPropsType) {\n    return <span className=\"Star\" onClick={() => {props.onClick(props.value)}}>\n    {props.selected ? <b>Star</b> : \"Star\"}</span>\n}*/\nfunction Star(props: StarPropsType) {\n    return <div className={props.selected ? style.Star : style.EmptyStar} onClick={() => {props.onClick(props.value)}}>\n    </div>\n}\n\n/*function Star(props: StarPropsType) {\n    return <div className={style.EmptyStar}> </div>\n}*/\n\nexport default Rating;\n","import React, {useDebugValue} from \"react\";\n\n\ntype AccordionPropsType ={\n  titleValue:string\n  collapsed:boolean\n    onClick:(collapsed:boolean)=>void\n  items: ItemsType[]\n  onClickItem:(value:any)=>void\n}\n\nfunction Accordion (props:AccordionPropsType) {\n  return (\n      <div>\n        <AccordionTitle title={props.titleValue} onClick={()=>{props.onClick(!props.collapsed)}}/>\n        {props.collapsed && <AccordionBody onClickItem={props.onClickItem} items={[{title:\"Julia\", value:1}, {title:\"Serg\", value:2}, {title: \"Max\", value:3}]}/>}\n      </div>\n      );\n}\n\ntype AccordionTitlePropsType ={\n  title:string\n    onClick:()=>void\n}\n\nfunction AccordionTitle (props: AccordionTitlePropsType){\nreturn <div onClick={()=>{props.onClick()}}>{props.title}</div>\n}\n\ntype ItemsType={\n  title:string\n  value:any\n}\ntype AccordionBodyPropsType ={\nitems: ItemsType[]\n  onClickItem: (value:any)=> void\n}\n\n\nfunction AccordionBody (props:AccordionBodyPropsType ){\n  return (\n  <div>\n    <ul>\n      {props.items.map((i, index)=> <li key={index} onClick={()=>{props.onClickItem(i.value)}}>{i.title}</li>)   }\n    </ul>\n  </div>\n  );\n}\n\nexport default Accordion;\n","import React, {useState} from \"react\";\n\n\n type onOffPropsType  = {\n    onClick:()=> void\n     onValue:boolean\n\n}\n\nexport function OnOff (props:onOffPropsType ) {\n\n    const onStyle = {\n        width:\"30px\",\n        height:\"20px\",\n        padding: \"2px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:props.onValue ? \"green\":\"white\"\n    }\n    const offStyle = {\n        width:\"30px\",\n        height:\"20px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:props.onValue ? \"white\":\"red\",\n        marginLeft: \"2px\",\n        padding: \"2px\"\n    }\n    const indicatorStyle = {\n        width:\"10px\",\n        height:\"10px\",\n        borderRadius:\"5px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:props.onValue ? \"green\":\"red\",\n        padding: \"2px\"\n    }\n  return (\n      <div>\n<div style={onStyle} onClick={ () => {props.onClick()}}>On</div>\n<div style={offStyle} onClick={() => {props.onClick()}}>Off</div>\n<div style={indicatorStyle}></div>\n      </div>\n        );\n  } \n","import React, {useState} from \"react\";\n\ntype UncontrolledAccordionProps = {\n    titleValue: string\n}\n\nfunction UnControlledAccordion(props: UncontrolledAccordionProps) {\n    let [collapsed, setCollapsed] =useState(false)\n    return (\n        <div>\n            <AccordionTitle title={props.titleValue} setCollapsed={()=>{setCollapsed(!collapsed)}}/>\n            {collapsed && <AccordionBody />}\n        </div>\n);\n}\n\ntype AccordionTitlePropsType = {\n    title: string\n    setCollapsed:()=>void\n}\n\nfunction AccordionTitle(props: AccordionTitlePropsType) {\n\n    return <div onClick={()=>{props.setCollapsed()}}>{props.title}</div>\n}\n\nfunction AccordionBody() {\n    return (\n        <div>\n            <ul>\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default UnControlledAccordion;\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\n\ntype RatingPropsType = {\n\n}\nexport type RatingValueType =  0 | 1 | 2 | 3 | 4 |5\n\nfunction UnControlledRating (props:RatingPropsType ) {\n    let [value, setValue] = useState<RatingValueType>(1)\n\n  return (\n      <div>\n      <Star selected={value >0} setValue={ () => {setValue(1)}}/>\n      <Star selected={value >1} setValue={ () => {setValue(2)}}/>\n      <Star selected={value >2} setValue={ () => {setValue(3)}}/>\n      <Star selected={value >3} setValue={ () => {setValue(4)}}/>\n      <Star selected={value >4} setValue={ () => {setValue(5)}}/>\n      </div>\n        );\n  } \n\ntype StarPropsType = {\n  selected:boolean\n  setValue:()=>void\n}\n\nfunction Star(props: StarPropsType) {\n    return <span onClick={() => {props.setValue()}}> {props.selected ? <b>Star</b> : \"Star\"}</span>\n}\n\nexport default UnControlledRating;\n","import React, {useState} from \"react\";\n\n\n type onOffPropsType  = {\n\n}\n\nexport function UnControlledOnOff (props:onOffPropsType ) {\n    let [on,setOn] = useState(false)\n    const onStyle = {\n        width:\"30px\",\n        height:\"20px\",\n        padding: \"2px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:on ? \"green\":\"white\"\n    }\n    const offStyle = {\n        width:\"30px\",\n        height:\"20px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:on ? \"white\":\"red\",\n        marginLeft: \"2px\",\n        padding: \"2px\"\n    }\n    const indicatorStyle = {\n        width:\"10px\",\n        height:\"10px\",\n        borderRadius:\"5px\",\n        border:\"1px solid black\",\n        display:\"inline-block\",\n        backgroundColor:on ? \"green\":\"red\",\n        padding: \"2px\"\n    }\n  return (\n      <div>\n<div style={onStyle} onClick={ () => {setOn(true)}}>On</div>\n<div style={offStyle} onClick={() => {setOn(false)}}>Off</div>\n<div style={indicatorStyle}></div>\n      </div>\n        );\n  } \n","import React, {ChangeEvent, useRef, useState} from \"react\";\n// also exported from '@storybook/react' if you can deal with breaking changes in 6.1\nimport { Story, Meta } from '@storybook/react/types-6-0';\n\n\nexport default {\n  title: 'input',\n /* component: Accordion,*/\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n} as Meta;\n\nexport const UncontrolledInput= () => <input />\n\nexport const TtackValueOfUncontrolledInput= () =>{\n  const [value, setValue] = useState(\"\")\n  return <><input onChange={(e)=> { setValue(e.currentTarget.value )}} /> - {value}</>\n}\n\nexport const GetValueUncontrolledInputByButtonPress = () => {\n  const [value, setValue] = useState(\"\")\n  const inputValueRef = useRef<HTMLInputElement>(null)\n\n  const save = ()=> {\n    const el = inputValueRef.current as HTMLInputElement\n    return setValue(el.value)\n  }\n  return  <><input ref={inputValueRef}/><button onClick={save}>save</button>- {value}</>\n}\n\n/*export const controlledInput = () => {\n  const [value, setValue] = useState(\"\")\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>)=>{setValue(e.currentTarget.value) }\n\n  return <input value={value} onChange={onChangeInput}/>\n}*/\n\nexport const ControlledCheckBox = () => {\n  const [value, setValue] = useState(true)\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>)=>{setValue(e.currentTarget.checked) }\n\n  return <input type= \"checkBox\" checked={value} onChange={onChangeInput}/>\n}\n\n/*\nexport const controlledSelect = () => {\n  const [value, setValue] = useState(\"2\")\n  const onChangeSelect = (e: ChangeEvent<HTMLSelectElement>)=>{setValue(e.currentTarget.value)}\n\nreturn <select value={value} onChange={onChangeSelect }>\n  <option value=\"1\">Moscow</option>\n  <option value=\"2\">London</option>\n  <option value=\"3\">Paris</option>\n       </select>\n}\n*/\n","import React, {useState} from \"react\";\nimport Rating from './components/Rating/Rating';\nimport Accordion from './components/Accordion/Accordion';\nimport {OnOff} from \"./components/OnOff/OnOff_useState\";\nimport UnControlledAccordion from './components/UncontrolledAccordion/UnControlledAccordion';\nimport UnControlledRating, {RatingValueType} from \"./components/UncontrolledRating/UnControlledRating\";\nimport {UnControlledOnOff} from \"./components/UncontrolledOnOff/UnControlledOnOff_useState\";\nimport \"./App.css\";\nimport { ControlledCheckBox } from \"./components/Input/input.stories\";\n\n\n\nfunction App() {\n    const onClickItem = ()=>{}\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(0)\n    let [accordionCollapsed, setaccordionCollapsed] = useState<boolean>(true)\n    let [on,setOn] = useState<boolean>(false)\n  return (\n      <div className=\"App\">\n          <Accordion onClickItem={onClickItem} titleValue={\"Users\"} collapsed={accordionCollapsed} onClick={setaccordionCollapsed} items={[{title:\"Julia\", value:1}, {title:\"Serg\", value:2}, {title: \"Max\", value:3}]}/>\n          <Rating value={ratingValue} onClick= {setRatingValue}/>\n          <OnOff onValue={on} onClick={()=>{setOn(!on)}}/>\n          <UnControlledOnOff />\n          <UnControlledAccordion titleValue={\"Menu\"}/>\n          <UnControlledAccordion titleValue={\"Users\"}/>\n          <UnControlledRating />\n          <ControlledCheckBox />\n\n      </div>\n\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}